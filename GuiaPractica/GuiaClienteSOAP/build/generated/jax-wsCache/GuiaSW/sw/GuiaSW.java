
package sw;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * Eclipse Metro/2.4.8 (RELEASE-2.4.8-e044505; 2022-01-04T13:29:23+0000) JAXWS-RI/2.3.5 JAXWS-API/2.3.3 JAXB-RI/2.3.5 JAXB-API/2.3.3
 * Generated source version: 2.2
 * 
 */
@WebService(name = "GuiaSW", targetNamespace = "http://sw/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface GuiaSW {


    /**
     * 
     * @param a
     * @param b
     * @return
     *     returns java.lang.Double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "operacionDivision", targetNamespace = "http://sw/", className = "sw.OperacionDivision")
    @ResponseWrapper(localName = "operacionDivisionResponse", targetNamespace = "http://sw/", className = "sw.OperacionDivisionResponse")
    @Action(input = "http://sw/GuiaSW/operacionDivisionRequest", output = "http://sw/GuiaSW/operacionDivisionResponse")
    public Double operacionDivision(
        @WebParam(name = "a", targetNamespace = "")
        double a,
        @WebParam(name = "b", targetNamespace = "")
        double b);

    /**
     * 
     * @param a
     * @param b
     * @return
     *     returns java.lang.Double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "operacionMultiplicacion", targetNamespace = "http://sw/", className = "sw.OperacionMultiplicacion")
    @ResponseWrapper(localName = "operacionMultiplicacionResponse", targetNamespace = "http://sw/", className = "sw.OperacionMultiplicacionResponse")
    @Action(input = "http://sw/GuiaSW/operacionMultiplicacionRequest", output = "http://sw/GuiaSW/operacionMultiplicacionResponse")
    public Double operacionMultiplicacion(
        @WebParam(name = "a", targetNamespace = "")
        double a,
        @WebParam(name = "b", targetNamespace = "")
        double b);

    /**
     * 
     * @param a
     * @param b
     * @return
     *     returns java.lang.Double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "operacionResta", targetNamespace = "http://sw/", className = "sw.OperacionResta")
    @ResponseWrapper(localName = "operacionRestaResponse", targetNamespace = "http://sw/", className = "sw.OperacionRestaResponse")
    @Action(input = "http://sw/GuiaSW/operacionRestaRequest", output = "http://sw/GuiaSW/operacionRestaResponse")
    public Double operacionResta(
        @WebParam(name = "a", targetNamespace = "")
        double a,
        @WebParam(name = "b", targetNamespace = "")
        double b);

    /**
     * 
     * @param a
     * @param b
     * @return
     *     returns java.lang.Double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "operacionSuma", targetNamespace = "http://sw/", className = "sw.OperacionSuma")
    @ResponseWrapper(localName = "operacionSumaResponse", targetNamespace = "http://sw/", className = "sw.OperacionSumaResponse")
    @Action(input = "http://sw/GuiaSW/operacionSumaRequest", output = "http://sw/GuiaSW/operacionSumaResponse")
    public Double operacionSuma(
        @WebParam(name = "a", targetNamespace = "")
        double a,
        @WebParam(name = "b", targetNamespace = "")
        double b);

    /**
     * 
     * @param a
     * @param b
     * @return
     *     returns java.lang.Double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "calcularFuerza", targetNamespace = "http://sw/", className = "sw.CalcularFuerza")
    @ResponseWrapper(localName = "calcularFuerzaResponse", targetNamespace = "http://sw/", className = "sw.CalcularFuerzaResponse")
    @Action(input = "http://sw/GuiaSW/calcularFuerzaRequest", output = "http://sw/GuiaSW/calcularFuerzaResponse")
    public Double calcularFuerza(
        @WebParam(name = "a", targetNamespace = "")
        double a,
        @WebParam(name = "b", targetNamespace = "")
        double b);

    /**
     * 
     * @param usuario
     * @param contrasena
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "login", targetNamespace = "http://sw/", className = "sw.Login")
    @ResponseWrapper(localName = "loginResponse", targetNamespace = "http://sw/", className = "sw.LoginResponse")
    @Action(input = "http://sw/GuiaSW/loginRequest", output = "http://sw/GuiaSW/loginResponse")
    public Boolean login(
        @WebParam(name = "usuario", targetNamespace = "")
        String usuario,
        @WebParam(name = "contrasena", targetNamespace = "")
        String contrasena);

    /**
     * 
     * @param a
     * @param b
     * @return
     *     returns java.lang.Double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "calcularEnergiaCinetica", targetNamespace = "http://sw/", className = "sw.CalcularEnergiaCinetica")
    @ResponseWrapper(localName = "calcularEnergiaCineticaResponse", targetNamespace = "http://sw/", className = "sw.CalcularEnergiaCineticaResponse")
    @Action(input = "http://sw/GuiaSW/calcularEnergiaCineticaRequest", output = "http://sw/GuiaSW/calcularEnergiaCineticaResponse")
    public Double calcularEnergiaCinetica(
        @WebParam(name = "a", targetNamespace = "")
        double a,
        @WebParam(name = "b", targetNamespace = "")
        double b);

    /**
     * 
     * @param a
     * @param b
     * @return
     *     returns java.lang.Double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "calcularVelocidad", targetNamespace = "http://sw/", className = "sw.CalcularVelocidad")
    @ResponseWrapper(localName = "calcularVelocidadResponse", targetNamespace = "http://sw/", className = "sw.CalcularVelocidadResponse")
    @Action(input = "http://sw/GuiaSW/calcularVelocidadRequest", output = "http://sw/GuiaSW/calcularVelocidadResponse")
    public Double calcularVelocidad(
        @WebParam(name = "a", targetNamespace = "")
        double a,
        @WebParam(name = "b", targetNamespace = "")
        double b);

}
