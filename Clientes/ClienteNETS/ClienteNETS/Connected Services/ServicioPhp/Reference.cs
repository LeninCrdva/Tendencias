//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClienteNETS.ServicioPhp {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="PhpSoap", ConfigurationName="ServicioPhp.ServicePhpPortType")]
    public interface ServicePhpPortType {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/soap/ServicePhp.php/comprobarPalindroma", ReplyAction="*")]
        [System.ServiceModel.DataContractFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string comprobarPalindroma(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost/soap/ServicePhp.php/comprobarPalindroma", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> comprobarPalindromaAsync(string name);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ServicePhpPortTypeChannel : ClienteNETS.ServicioPhp.ServicePhpPortType, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServicePhpPortTypeClient : System.ServiceModel.ClientBase<ClienteNETS.ServicioPhp.ServicePhpPortType>, ClienteNETS.ServicioPhp.ServicePhpPortType {
        
        public ServicePhpPortTypeClient() {
        }
        
        public ServicePhpPortTypeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServicePhpPortTypeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicePhpPortTypeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicePhpPortTypeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string comprobarPalindroma(string name) {
            return base.Channel.comprobarPalindroma(name);
        }
        
        public System.Threading.Tasks.Task<string> comprobarPalindromaAsync(string name) {
            return base.Channel.comprobarPalindromaAsync(name);
        }
    }
}
